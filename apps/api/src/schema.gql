# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Person {
  id: ID!
  name: String!
  mass: Float!
}

type Starship {
  id: ID!
  name: String!
  crew: Float!
}

type Game {
  id: ID!
  resourceType: ResourceType!
  createdAt: DateTime!
  rounds: [Round!]
}

enum ResourceType {
  PERSON
  STARSHIP
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Round {
  id: ID!
  gameId: String!
  leftId: String!
  rightId: String!
  leftValue: Float!
  rightValue: Float!
  winnerId: String
  createdAt: DateTime!
  left: ResourceUnion
  right: ResourceUnion
  winner: ResourceUnion
}

union ResourceUnion = Person | Starship

type Query {
  people: [Person!]!
  person(id: String!): Person
  starships: [Starship!]!
  starship(id: String!): Starship
  game(id: ID!): Game
  games: [Game!]!
}

type Mutation {
  createPerson(data: CreatePersonInput!): Person!
  updatePerson(id: String!, data: UpdatePersonInput!): Person!
  deletePerson(id: String!): Person!
  createStarship(data: CreateStarshipInput!): Starship!
  updateStarship(id: String!, data: UpdateStarshipInput!): Starship!
  deleteStarship(id: String!): Starship!
  createGame(data: CreateGameDto!): Game!
  playRound(data: PlayRoundDto!): Round!
}

input CreatePersonInput {
  name: String!
  mass: Float!
}

input UpdatePersonInput {
  name: String
  mass: Float
}

input CreateStarshipInput {
  name: String!
  crew: Float!
}

input UpdateStarshipInput {
  name: String
  crew: Float
}

input CreateGameDto {
  resourceType: ResourceType!
}

input PlayRoundDto {
  gameId: ID!
}